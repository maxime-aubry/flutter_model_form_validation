// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import "dart:core";
import 'latitude_test.dart' as prefix1;
import 'package:flutter_model_form_validation/src/annotations/easy_validator.dart'
    as prefix0;
import 'package:flutter_model_form_validation/src/annotations/validators/latitude.dart'
    as prefix2;
import 'package:flutter_model_form_validation/src/utils/enums.dart' as prefix3;

// ignore_for_file: unnecessary_const

// ignore:unused_import
import "package:reflectable/mirrors.dart" as m;
// ignore:unused_import
import "package:reflectable/src/reflectable_builder_based.dart" as r;
// ignore:unused_import
import "package:reflectable/reflectable.dart" as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.EasyValidator(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r"LatitudeTest",
            r".LatitudeTest",
            7,
            0,
            const prefix0.EasyValidator(),
            const <int>[0, 1, 2],
            const <int>[6, 7, 8, 9, 10, 3, 4, 5],
            const <int>[],
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            const <Object>[prefix0.easyValidator],
            null)
      ],
      <m.DeclarationMirror>[
        r.VariableMirrorImpl(r"a", 33797, 0, const prefix0.EasyValidator(), -1,
            -1, -1, null, const <Object>[
          const prefix2.Latitude(
              gpsFormat: prefix3.GpsFormat.dd, error: 'invalid latitude')
        ]),
        r.VariableMirrorImpl(r"b", 33797, 0, const prefix0.EasyValidator(), -1,
            -1, -1, null, const <Object>[
          const prefix2.Latitude(
              gpsFormat: prefix3.GpsFormat.dm, error: 'invalid latitude')
        ]),
        r.VariableMirrorImpl(r"c", 33797, 0, const prefix0.EasyValidator(), -1,
            -1, -1, null, const <Object>[
          const prefix2.Latitude(
              gpsFormat: prefix3.GpsFormat.dms, error: 'invalid latitude')
        ]),
        r.ImplicitGetterMirrorImpl(const prefix0.EasyValidator(), 0, -1, -1, 3),
        r.ImplicitGetterMirrorImpl(const prefix0.EasyValidator(), 1, -1, -1, 4),
        r.ImplicitGetterMirrorImpl(const prefix0.EasyValidator(), 2, -1, -1, 5),
        r.MethodMirrorImpl(r"==", 131074, null, -1, -1, -1, null,
            const <int>[0], const prefix0.EasyValidator(), const []),
        r.MethodMirrorImpl(r"toString", 131074, null, -1, -1, -1, null,
            const <int>[], const prefix0.EasyValidator(), const []),
        r.MethodMirrorImpl(r"noSuchMethod", 65538, null, null, -1, -1, null,
            const <int>[1], const prefix0.EasyValidator(), const []),
        r.MethodMirrorImpl(r"hashCode", 131075, null, -1, -1, -1, null,
            const <int>[], const prefix0.EasyValidator(), const []),
        r.MethodMirrorImpl(r"runtimeType", 131075, null, -1, -1, -1, null,
            const <int>[], const prefix0.EasyValidator(), const [])
      ],
      <m.ParameterMirror>[
        r.ParameterMirrorImpl(r"other", 16390, 6, const prefix0.EasyValidator(),
            null, -1, -1, null, const [], null, null),
        r.ParameterMirrorImpl(
            r"invocation",
            32774,
            8,
            const prefix0.EasyValidator(),
            -1,
            -1,
            -1,
            null,
            const [],
            null,
            null)
      ],
      <Type>[prefix1.LatitudeTest],
      1,
      {
        r"==": (dynamic instance) => (x) => instance == x,
        r"toString": (dynamic instance) => instance.toString,
        r"noSuchMethod": (dynamic instance) => instance.noSuchMethod,
        r"hashCode": (dynamic instance) => instance.hashCode,
        r"runtimeType": (dynamic instance) => instance.runtimeType,
        r"a": (dynamic instance) => instance.a,
        r"b": (dynamic instance) => instance.b,
        r"c": (dynamic instance) => instance.c
      },
      {},
      null,
      [])
};

final _memberSymbolMap = null;

initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
