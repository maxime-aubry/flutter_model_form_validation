// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import "dart:core";
import 'color_test.dart' as prefix1;
import 'package:flutter_model_form_validation/src/annotations/flutter_model_form_validator.dart'
    as prefix0;
import 'package:flutter_model_form_validation/src/annotations/validators/color.dart'
    as prefix2;
import 'package:flutter_model_form_validation/src/utils/enums.dart' as prefix3;

// ignore_for_file: unnecessary_const

// ignore:unused_import
import "package:reflectable/mirrors.dart" as m;
// ignore:unused_import
import "package:reflectable/src/reflectable_builder_based.dart" as r;
// ignore:unused_import
import "package:reflectable/reflectable.dart" as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.FlutterModelFormValidator(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r"ColorWithBothTypesTest",
            r".ColorWithBothTypesTest",
            7,
            0,
            const prefix0.FlutterModelFormValidator(),
            const <int>[0, 1],
            const <int>[7, 8, 9, 10, 11, 5, 6],
            const <int>[],
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            const <Object>[prefix0.flutterModelFormValidator],
            null),
        r.NonGenericClassMirrorImpl(
            r"ColorWithDeveloperTypeTest",
            r".ColorWithDeveloperTypeTest",
            7,
            1,
            const prefix0.FlutterModelFormValidator(),
            const <int>[2],
            const <int>[7, 8, 9, 10, 11, 12],
            const <int>[],
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            const <Object>[prefix0.flutterModelFormValidator],
            null),
        r.NonGenericClassMirrorImpl(
            r"ColorWithUserTypeTest",
            r".ColorWithUserTypeTest",
            7,
            2,
            const prefix0.FlutterModelFormValidator(),
            const <int>[3, 4],
            const <int>[7, 8, 9, 10, 11, 13, 14],
            const <int>[],
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            const <Object>[prefix0.flutterModelFormValidator],
            null)
      ],
      <m.DeclarationMirror>[
        r.VariableMirrorImpl(
            r"value",
            33797,
            0,
            const prefix0.FlutterModelFormValidator(),
            -1,
            -1,
            -1,
            null, const <Object>[
          const prefix2.Color(
              colorTypeOnProperty: 'colorType',
              colorType: prefix3.ColorType.rgb,
              error: 'invalid color')
        ]),
        r.VariableMirrorImpl(
            r"colorType",
            33797,
            0,
            const prefix0.FlutterModelFormValidator(),
            -1,
            -1,
            -1,
            null, const []),
        r.VariableMirrorImpl(
            r"value",
            33797,
            1,
            const prefix0.FlutterModelFormValidator(),
            -1,
            -1,
            -1,
            null, const <Object>[
          const prefix2.Color(
              colorType: prefix3.ColorType.hex, error: 'invalid color')
        ]),
        r.VariableMirrorImpl(
            r"value",
            33797,
            2,
            const prefix0.FlutterModelFormValidator(),
            -1,
            -1,
            -1,
            null, const <Object>[
          const prefix2.Color(
              colorTypeOnProperty: 'colorType', error: 'invalid color')
        ]),
        r.VariableMirrorImpl(
            r"colorType",
            33797,
            2,
            const prefix0.FlutterModelFormValidator(),
            -1,
            -1,
            -1,
            null, const []),
        r.ImplicitGetterMirrorImpl(
            const prefix0.FlutterModelFormValidator(), 0, -1, -1, 5),
        r.ImplicitGetterMirrorImpl(
            const prefix0.FlutterModelFormValidator(), 1, -1, -1, 6),
        r.MethodMirrorImpl(
            r"==",
            131074,
            null,
            -1,
            -1,
            -1,
            null,
            const <int>[0],
            const prefix0.FlutterModelFormValidator(),
            const []),
        r.MethodMirrorImpl(r"toString", 131074, null, -1, -1, -1, null,
            const <int>[], const prefix0.FlutterModelFormValidator(), const []),
        r.MethodMirrorImpl(
            r"noSuchMethod",
            65538,
            null,
            null,
            -1,
            -1,
            null,
            const <int>[1],
            const prefix0.FlutterModelFormValidator(),
            const []),
        r.MethodMirrorImpl(r"hashCode", 131075, null, -1, -1, -1, null,
            const <int>[], const prefix0.FlutterModelFormValidator(), const []),
        r.MethodMirrorImpl(r"runtimeType", 131075, null, -1, -1, -1, null,
            const <int>[], const prefix0.FlutterModelFormValidator(), const []),
        r.ImplicitGetterMirrorImpl(
            const prefix0.FlutterModelFormValidator(), 2, -1, -1, 12),
        r.ImplicitGetterMirrorImpl(
            const prefix0.FlutterModelFormValidator(), 3, -1, -1, 13),
        r.ImplicitGetterMirrorImpl(
            const prefix0.FlutterModelFormValidator(), 4, -1, -1, 14)
      ],
      <m.ParameterMirror>[
        r.ParameterMirrorImpl(
            r"other",
            16390,
            7,
            const prefix0.FlutterModelFormValidator(),
            null,
            -1,
            -1,
            null,
            const [],
            null,
            null),
        r.ParameterMirrorImpl(
            r"invocation",
            32774,
            9,
            const prefix0.FlutterModelFormValidator(),
            -1,
            -1,
            -1,
            null,
            const [],
            null,
            null)
      ],
      <Type>[
        prefix1.ColorWithBothTypesTest,
        prefix1.ColorWithDeveloperTypeTest,
        prefix1.ColorWithUserTypeTest
      ],
      3,
      {
        r"==": (dynamic instance) => (x) => instance == x,
        r"toString": (dynamic instance) => instance.toString,
        r"noSuchMethod": (dynamic instance) => instance.noSuchMethod,
        r"hashCode": (dynamic instance) => instance.hashCode,
        r"runtimeType": (dynamic instance) => instance.runtimeType,
        r"value": (dynamic instance) => instance.value,
        r"colorType": (dynamic instance) => instance.colorType
      },
      {},
      null,
      [])
};

final _memberSymbolMap = null;

initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
